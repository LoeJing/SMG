C51 COMPILER V9.56.0.0   I2C                                                               05/18/2019 20:23:44 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE I2C
OBJECT MODULE PLACED IN .\Objects\i2c.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE i2c.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\i2c.l
                    -st) TABS(2) OBJECT(.\Objects\i2c.obj)

line level    source

   1          #include <reg52.h>
   2          #include <intrins.h>
   3          #include "extern.h"
   4          
   5          #define I2CDelay()  {_nop_();_nop_();_nop_();_nop_();}
   6          sbit I2C_SCL = P3^7;
   7          sbit I2C_SDA = P3^6;
   8          
   9          /* 产生总线起始信号 */
  10          void I2CStart()
  11          {
  12   1          I2C_SDA = 1; //首先确保SDA、SCL都是高电平
  13   1          I2C_SCL = 1;
  14   1          I2CDelay();
  15   1          I2C_SDA = 0; //先拉低SDA
  16   1          I2CDelay();
  17   1          I2C_SCL = 0; //再拉低SCL
  18   1      }
  19          /* 产生总线停止信号 */
  20          void I2CStop()
  21          {
  22   1          I2C_SCL = 0; //首先确保SDA、SCL都是低电平
  23   1          I2C_SDA = 0;
  24   1          I2CDelay();
  25   1          I2C_SCL = 1; //先拉高SCL
  26   1          I2CDelay();
  27   1          I2C_SDA = 1; //再拉高SDA
  28   1          I2CDelay();
  29   1      }
  30          /* I2C总线写操作，dat-待写入字节，返回值-从机应答位的值 */
  31          bit I2CWrite(unsigned char dat)
  32          {
  33   1          bit ack;  //用于暂存应答位的值
  34   1          unsigned char mask;  //用于探测字节内某一位值的掩码变量
  35   1      
  36   1          for (mask=0x80; mask!=0; mask>>=1) //从高位到低位依次进行
  37   1          {
  38   2              if ((mask&dat) == 0)  //该位的值输出到SDA上
  39   2                  I2C_SDA = 0;
  40   2              else
  41   2                  I2C_SDA = 1;
  42   2              I2CDelay();
  43   2              I2C_SCL = 1;          //拉高SCL
  44   2              I2CDelay();
  45   2              I2C_SCL = 0;          //再拉低SCL，完成一个位周期
  46   2          }
  47   1          I2C_SDA = 1;   //8位数据发送完后，主机释放SDA，以检测从机应答
  48   1          I2CDelay();
  49   1          I2C_SCL = 1;   //拉高SCL
  50   1          ack = I2C_SDA; //读取此时的SDA值，即为从机的应答值
  51   1          I2CDelay();
  52   1          I2C_SCL = 0;   //再拉低SCL完成应答位，并保持住总线
  53   1      
  54   1          return (~ack); //应答值取反以符合通常的逻辑：
C51 COMPILER V9.56.0.0   I2C                                                               05/18/2019 20:23:44 PAGE 2   

  55   1                         //0=不存在或忙或写入失败，1=存在且空闲或写入成功
  56   1      }
  57          unsigned char I2CReadNAK()
  58          {
  59   1        unsigned char mask;
  60   1        unsigned char dat;
  61   1      
  62   1        I2C_SDA = 1;
  63   1        for(mask=0x80; mask!=0; mask>>=1)
  64   1        {
  65   2          I2CDelay();
  66   2          I2C_SCL = 1;
  67   2          if(I2C_SDA == 0)
  68   2            dat &= ~mask;
  69   2          else
  70   2            dat |= mask;
  71   2          I2CDelay();
  72   2          I2C_SCL = 0;
  73   2        }
  74   1        I2C_SDA = 1;
  75   1        I2CDelay();
  76   1        I2C_SCL = 1;
  77   1        I2CDelay();
  78   1        I2C_SCL = 0;
  79   1      
  80   1        return dat;
  81   1      }
  82          
  83          unsigned char I2CReadACK()
  84          {
  85   1        unsigned char mask;
  86   1        unsigned char dat;
  87   1      
  88   1        I2C_SDA = 1;
  89   1        for(mask=0x80; mask!=0; mask>>=1)
  90   1        {
  91   2          I2CDelay();
  92   2          I2C_SCL = 1;
  93   2          if(I2C_SDA == 0)
  94   2            dat &= ~mask;
  95   2          else
  96   2            dat |= mask;
  97   2          I2CDelay();
  98   2          I2C_SCL = 0;
  99   2        }
 100   1        I2C_SDA = 0;
 101   1        I2CDelay();
 102   1        I2C_SCL = 1;
 103   1        I2CDelay();
 104   1        I2C_SCL = 0;
 105   1      
 106   1        return dat;
 107   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    194    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
C51 COMPILER V9.56.0.0   I2C                                                               05/18/2019 20:23:44 PAGE 3   

   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
